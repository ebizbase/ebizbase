name: PR closed

on:
  pull_request:
    types: [closed]
    branches:
      - dev

jobs:

  prerelease-pr:
    name: Create Prerelease PR
    runs-on: ubuntu-latest
    if: github.event.pull_request.merged == true && github.head_ref != 'prerelease' && github.base_ref == 'dev'
    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4

      - name: Setup project
        uses: ./.github/actions/setup

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GH_BOT_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          driver-opts: |
            image=moby/buildkit:master
            network=host

      - name: Do prerelease
        id: release
        env:
          GITHUB_TOKEN: ${{ secrets.GH_BOT_TOKEN }}
        run: |
          echo "::group::Installing release-it"
          npm i -g release-it
          echo "::endgroup::"

          echo "Configuring Git user"
          git config --global user.email "bot@github.com"
          git config --global user.name "Github Action"

          echo "Generating changelog"
          changelog="Generated changelog content"  # Thay bằng lệnh thực tế tạo changelog
          echo "Generated changelog: $changelog"

          echo "Generating version and changelog"
          version=$(npx release-it --release-version --preRelease=rc)
          echo "Generated version: $version"
          echo "changelog=$changelog" >> $GITHUB_OUTPUT
          echo "version=$version" >> $GITHUB_OUTPUT

          echo "Deleting prerelease branch (if it exists)"
          git push origin --delete prerelease || echo "::warning::Branch 'prerelease' does not exist to delete"

          echo "Closing open prerelease pull requests (if any)"
          gh pr list --head prerelease --state open --json number -q '.[].number' | while read pr_number; do
            echo "Closing pull request #$pr_number"
            gh pr close $pr_number --delete-branch || echo "::warning::Failed to close PR #$pr_number"
          done

          echo "Running release-it with configuration file"
          npx release-it -c .github/release/pr.json --ci --preRelease=rc

      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v7
        with:
          token: ${{ secrets.GH_BOT_TOKEN }}
          branch: prerelease
          base: dev
          title: "chore: release ${{ steps.release.outputs.version }}"
          body: ${{ steps.release.outputs.changelog }}


  staging:
    name: Create Prerelease tag & GH release
    runs-on: ubuntu-latest
    if: github.event.pull_request.merged == true && github.head_ref == 'prerelease' && github.base_ref == 'dev'
    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
      - name: Setup project
        uses: ./.github/actions/setup
      - name: Update staging chart to current git SHA
        env:
          GITHUB_TOKEN: ${{ secrets.GH_BOT_TOKEN }}
        run: |
          echo "::group::Installing release-it"
          npm i -g release-it
          echo "::endgroup::"

          echo "::group::Configuring Git user"
          git config --global user.email "bot@github.com"
          git config --global user.name "Github Action"
          echo "::endgroup::"

          echo "::group::Generating next version and changelog"
          version=$(npx release-it --release-version)
          echo "Generated version: $version"
          changelog="Generated changelog content"
          echo "Generated changelog: $changelog"
          echo "::endgroup::"


          echo "Update staging helm chart to current SHA"
          SHORT_SHA=$(echo $GITHUB_SHA | cut -c 1-7)
          yq eval ".git-sha = \"$SHORT_SHA\"" -i charts/staging/values.yaml

