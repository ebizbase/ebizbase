apiVersion: batch/v1
kind: Job
metadata:
  name: mongodb-setup
  labels:
    app: mongodb
spec:
  template:
    metadata:
      name: mongodb-setup
      labels:
        enviroment: staging
        job: mongodb-setup
    spec:
      restartPolicy: OnFailure
      backoffLimit: 3
      containers:
        - name: data-copy
          image: bitnami/mongodb:8.0.4-debian-12-r3
          command:
            - /bin/sh
            - -c
            - |
              SRC=mongodb://mongodb-headless.ecoma-prod.svc.cluster.local
              DEST=mongodb://mongodb-headless.ecoma-staging.svc.cluster.local
              RETRIES=30

              echo "Exporting data..."
              mongodump --uri="$SRC" --out=/tmp/backup

              echo "Wating to mongodb..."
              until mongosh "$DEST" --quiet --eval "const status = rs.status(); if (status.ok === 1) { quit(0) } else { print(JSON.stringify(status)); quit(1) }"; do
                RETRIES=$((RETRIES-1))
                sleep 2
                echo "Wating to mongodb..."
              done

              if [ $RETRIES -eq 0 ]; then
                echo "Staging mongodb is unavaiable. Quit Job"
                exit 1
              fi

              echo "Deleting all old data..."
              mongosh "$DEST" --eval "db.getMongo().getDBNames().forEach(function(dbName) {
                if (!['admin', 'config', 'local'].includes(dbName)) {
                  db.getSiblingDB(dbName).dropDatabase();
                }
              })"

              echo "Importing data..."
              mongorestore --uri="$DEST" --drop /tmp/backup

              echo "Finishing job..."
              touch /tmp/copy_complete
          volumeMounts:
            - name: copy-marker
              mountPath: /tmp
      volumes:
        - name: copy-marker
          emptyDir: {}
